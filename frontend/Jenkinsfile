pipeline {
  agent any
//     tools {nodejs "Node.js 20.11.0"}
    environment {
      // AWS_PUBLIC_IP = '172.26.8.148'
      // SSH_CMD = 'ssh -i /var/jenkins_home/.ssh/id_rsa ubuntu@i10c111.p.ssafy.io'
      // DOCKER = 'sudo docker'
      repository = "gudrb4869/giveus_frontend"  //docker hub id와 repository 이름
      DOCKERHUB_CREDENTIALS = credentials('dockerhub') // jenkins에 등록해 놓은 docker hub credentials 이름
      dockerImage = ''
      REPO = "s10-blockchain-contract-sub2/S10P22C206"
    }
    
  stages {

    //stage('SonarQube') {
    //
    //}

    stage('Install') {
      steps {
        dir('./frontend') {
          script {
            sh 'npm install'
          }
        }
      }
    }

    stage('Build image') {
      steps {
        script {
          dir('./frontend') {
            dockerImage = docker.build repository
          }
        }
      }
    }

    stage('Login'){
      steps{
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin' // docker hub 로그인
      }
    }

    stage('Push image') {
      steps {
        script {
          sh 'docker push $repository' //docker push
        }
      }
    }

    stage('Clean image') {
      steps {
        sh 'docker rmi $repository' // jenkins 컨테이너에 있는 docker image 제거
      }
    }

    stage('Deployment') {
      steps {
        script {
          try {
            sh 'docker stop giveus_frontend'
            sh 'docker rm giveus_frontend'
          } catch (e) {
            sh 'echo "fail to stop and remove container"'
          }
        }
        sh 'docker pull $repository:latest'
        sh 'docker run --name giveus_frontend -d -p 8090:3000 $repository'
//         sh '$SSH_CMD $DOCKER compose up'
      }
    }
  }
}